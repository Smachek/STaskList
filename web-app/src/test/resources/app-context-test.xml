<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/beansf
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- Use spring servlet for all requests, including static resources -->
    <mvc:default-servlet-handler/>

    <!-- Use @MVC annotations -->
    <mvc:annotation-driven/>

    <mvc:resources mapping="/resources/**" location="/resources/"/>

    <!-- Component scan for @Controller, @Service... annotations -->
    <context:component-scan base-package="com.smachek*"/>

    <import resource="classpath*:test-db.xml"/>

<!--    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer">-->
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:application.properties</value>
                <value>classpath:dao.properties</value>
            </list>
        </property>
    </bean>


    <bean id="namedParameterJdbcTemplate" class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
        <constructor-arg ref="dataSource"/>
    </bean>

    <bean id="folderDao" class="com.smachek.dao.jdbc.FolderDaoJdbc">
        <constructor-arg ref="namedParameterJdbcTemplate"/>
    </bean>

    <bean id="folderDtoDao" class="com.smachek.dao.jdbc.FolderDtoDaoJdbc">
        <constructor-arg ref="namedParameterJdbcTemplate"/>
    </bean>

    <bean id="taskDao" class="com.smachek.dao.jdbc.TaskDaoJdbc">
        <constructor-arg ref="namedParameterJdbcTemplate"/>
    </bean>

    <bean id="folderService" class="com.smachek.service.impl.FolderServiceImpl">
        <constructor-arg name="folderDao" ref="folderDao"/>
    </bean>

    <bean id="folderDtoService" class="com.smachek.service.impl.FolderDtoServiceImpl">
        <constructor-arg name="folderDtoDao" ref="folderDtoDao"/>
    </bean>

    <bean id="taskService" class="com.smachek.service.impl.TaskServiceImpl">
        <constructor-arg name="taskDao" ref="taskDao"/>
    </bean>

    <!-- Thymeleaf Template Resolver -->
    <bean id="templateResolver"
          class="org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver">
        <property name="prefix" value="/WEB-INF/templates/" />
        <property name="suffix" value=".html" />
        <property name="templateMode" value="HTML" />
        <!-- Template cache is true by default. Set to false if you want             -->
        <!-- templates to be automatically updated when modified.                    -->
        <property name="cacheable" value="false" />
    </bean>

    <!-- Thymeleaf Template Engine (Spring5-specific version) -->
    <bean id="templateEngine"
          class="org.thymeleaf.spring5.SpringTemplateEngine">
        <property name="templateResolvers">
            <set>
                <ref bean="templateResolver" />
            </set>
        </property>
    </bean>

    <!-- Thymeleaf View Resolver - implementation of Spring's ViewResolver interface -->
    <bean id="viewResolver" class="org.thymeleaf.spring5.view.ThymeleafViewResolver">
        <property name="templateEngine" ref="templateEngine" />
        <property name="characterEncoding" value="UTF-8" />
    </bean>

</beans>
